var documenterSearchIndex = {"docs":
[{"location":"references/#References","page":"References","title":"References","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"Pages = [\"references.md\"]","category":"page"},{"location":"references/#Types","page":"References","title":"Types","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"AbstractCMYK\nTransparentCMYK\nAbstractACMYK\nAbstractCMYKA\nCMYK\nACMYK\nCMYKA","category":"page"},{"location":"references/#CMYKColorTypes.AbstractCMYK","page":"References","title":"CMYKColorTypes.AbstractCMYK","text":"AbstractCMYK{T} <: Color{T, 4}\n\nAbstract supertype for opaque CMYK color types.\n\n\n\n\n\n","category":"type"},{"location":"references/#CMYKColorTypes.TransparentCMYK","page":"References","title":"CMYKColorTypes.TransparentCMYK","text":"TransparentCMYK{C <: AbstractCMYK, T} = TransparentColor{C, T, 5}\n\nAn alias for the abstract supertype for transparent CMYK color types.\n\n\n\n\n\n","category":"type"},{"location":"references/#CMYKColorTypes.AbstractACMYK","page":"References","title":"CMYKColorTypes.AbstractACMYK","text":"AbstractACMYK{C <: AbstractCMYK, T} = AlphaColor{C, T, 5}\n\nAn alias for the abstract supertype for CMYK color types with alpha stored first.\n\n\n\n\n\n","category":"type"},{"location":"references/#CMYKColorTypes.AbstractCMYKA","page":"References","title":"CMYKColorTypes.AbstractCMYKA","text":"AbstractCMYKA{C <: AbstractCMYK, T} = ColorAlpha{C, T, 5}\n\nAn alias for the abstract supertype for CMYK color types with alpha stored last.\n\n\n\n\n\n","category":"type"},{"location":"references/#CMYKColorTypes.CMYK","page":"References","title":"CMYKColorTypes.CMYK","text":"CMYK{T <: Fractional} <: AbstractCMYK{T}\n\nCMYK is a general type for representing process color (i.e. cyan, magenta, yellow and black). For each component value, 0 means 0% ink density and 1 means 100% ink density.\n\n\n\n\n\n","category":"type"},{"location":"references/#CMYKColorTypes.ACMYK","page":"References","title":"CMYKColorTypes.ACMYK","text":"ACMYK{T <: Fractional} <: AbstractACMYK{CMYK{T}, T}\n\nACMYK is a transparent color variant of CMYK. ACMYK stores the alpha component first, but its constructors always take the alpha component last, i.e. in order of (cyan, magenta, yellow, black, alpha).\n\n\n\n\n\n","category":"type"},{"location":"references/#CMYKColorTypes.CMYKA","page":"References","title":"CMYKColorTypes.CMYKA","text":"CMYKA{T <: Fractional} <: AbstractCMYKA{CMYK{T}, T}\n\nCMYKA is a transparent color variant of CMYK. ACMYK stores the alpha component last. See also ACMYK.\n\n\n\n\n\n","category":"type"},{"location":"references/#Traits","page":"References","title":"Traits","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"cyan\nmagenta\nyellow\nblack\nCMYKColorTypes.complement\ntotal_ink_coverage","category":"page"},{"location":"references/#CMYKColorTypes.cyan","page":"References","title":"CMYKColorTypes.cyan","text":"cyan(c)\n\nReturns the cyan component of an AbstractCMYK or TransparentCMYK color.\n\n\n\n\n\n","category":"function"},{"location":"references/#CMYKColorTypes.magenta","page":"References","title":"CMYKColorTypes.magenta","text":"magenta(c)\n\nReturns the magenta component of an AbstractCMYK or TransparentCMYK color.\n\n\n\n\n\n","category":"function"},{"location":"references/#CMYKColorTypes.yellow","page":"References","title":"CMYKColorTypes.yellow","text":"yellow(c)\n\nReturns the yellow component of an AbstractCMYK or TransparentCMYK color.\n\n\n\n\n\n","category":"function"},{"location":"references/#CMYKColorTypes.black","page":"References","title":"CMYKColorTypes.black","text":"black(c)\n\nReturns the black component of an AbstractCMYK or TransparentCMYK color.\n\n\n\n\n\n","category":"function"},{"location":"references/#CMYKColorTypes.complement","page":"References","title":"CMYKColorTypes.complement","text":"CMYKColorTypes.complement(c)\n\nReturn the color with the color components of the complement (i.e. 1 - compN(c)). If c is a TransparentCMYK, the alpha component is left untouched.\n\nThis function has the same functionality as ColorVectorSpace.complement. Therefore, if you are using ColorVectorSpace, you do not need to specify the module name explicitly. Also, to avoid name collisions, do not (re-)export this function.\n\nExamples\n\njulia> CMYKColorTypes.complement(CMYKA(0.0, 0.2, 0.5, 0.75, 0.7)) # keeping the alpha\nCMYKA{Float64}(1.0, 0.8, 0.5, 0.25, 0.7)\n\n\n\n\n\n","category":"function"},{"location":"references/#CMYKColorTypes.total_ink_coverage","page":"References","title":"CMYKColorTypes.total_ink_coverage","text":"total_ink_coverage(c::AbstractCMYK)\n\nReturns the total ink coverage (TIC), or the total amount of cyan, magenta, yellow, and black inks in percentage. Although not exact, this value is often used as a substitute for the total area coverage (TAC). This function cannot be used for TransparentCMYK colors, because the physical meaning is unclear.\n\nExamples\n\njulia> total_ink_coverage(CMYK{Float32}(1.0, 0.3, 0.2, 0.0))\n150.0f0\n\n\n\n\n\n","category":"function"},{"location":"references/#Others","page":"References","title":"Others","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"CMYKColorTypes.naively_convert","category":"page"},{"location":"references/#CMYKColorTypes.naively_convert","page":"References","title":"CMYKColorTypes.naively_convert","text":"naively_convert(::Type{<:Color}, c::Colorant)\nnaively_convert(::Type{<:TransparentColor}, c::Colorant[, alpha])\n\nConvert color types using the \"naive\" algorithm for RGB <â€“> CMYK conversions defined in CSS Color Module Level 4 (Working Draft).\n\nwarning: Warning\nThis methods yields very different results from conversions based on practical color profiles for printed materials.\n\n\n\n\n\n","category":"function"},{"location":"#CMYKColorTypes","page":"Introduction","title":"CMYKColorTypes","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"This package is an add-on to ColorTypes, and provides color types for process color, i.e. cyan, magenta, yellow and key (black) color model.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"using CMYKColorTypes","category":"page"},{"location":"#Type-design","page":"Introduction","title":"Type design","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"The CMYK type is defined as follows:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"struct CMYK{T <: Fractional} <: AbstractCMYK{T}\n    c::T # cyan in [0, 1]\n    m::T # magenta in [0, 1]\n    y::T # yellow in [0, 1]\n    k::T # black in [0, 1]\n    CMYK{T}(c::T, m::T, y::T, k::T=zero(T)) where {T} = new{T}(c, m, y, k)\nend","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"For each component value, 0 means 0% ink density and 1 means 100% ink density. Thus, CMYK(0, 0, 0, 0) means white (i.e. the underlying color) and CMYK(1, 1, 1, 1) means registration black  (or 400% black). Note that some graphics tools and image formats may encode 0% ink density as a saturated value and 100% ink density as zero. You can invert the scale using CMYKColorTypes.complement.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"The parameter T specifies the type of the components. You can use AbstractFloat and FixedPoint for T. It defaults to N0f8.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"In addition, the transparent color variants ACMYK and CMYKA are defined.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Similarly to AbstractRGB and TransparentRGB, CMYK and ACMYK/CMYKA are defined as subtypes of AbstractCMYK and TransparentCMYK respectively. Although this package does not define any other concrete types, some subtypes specific to certain storage formats or color profiles may be used. When writing generic code, it is recommended to use the accessors (cyan, magenta, yellow, and black), instead of accessing the fields directly.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"CMYK, ACMYK, and CMYKA have the constructors within the same style as for the other color types defined in ColorTypes.jl.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"CMYK{Float32}(1, 0.5, 0.2, 0) # explicitly specifying the component type\nCMYK(1, 0, 0, 0) # If all arguments are integers (`0` or `1`), `N0f8` will be used\nCMYK(1, 0.5, 0.2f0, 0) # the component type is promoted to `Float64`\nCMYK(1.0f0, 0.5f0, 0.2f0) # `k` (black) can be omitted\nACMYK(1, 0.5, 0.2, 0, 0.8) # alpha (`= 0.8`) is always last\nACMYK(CMYK(1, 0, 0, 0)) # alpha defaults to `1`\nCMYKA(ACMYK(1, 0, 0, 0, 1), 0.8) # overwriting the alpha","category":"page"},{"location":"#Conversion","page":"Introduction","title":"Conversion","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"In principle, CMYKColorTypes does not support the color space conversion. While RGB is associated with an absolute color space \"sRGB\" by default, CMYK is not associated with a specific color profile. There is no point in conversions which are not based on color profiles, and the handling of color profiles is out of scope of this minimal package.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"In practice, however, CMYKColorTypes does implement the conversion between AbstractRGB and CMYK only for preview purposes.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"warning: Warning\nYou should never use the default conversions for commercial printing or academic papers. For color space conversions, please use proper color profiles and configurations (e.g. rendering intent) with a color management system.The implementation of the default conversions is completely custom to this package, and there are no intentions to keep it compatible in future versions.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"using ColorTypes;\nconvert(RGB, CMYK(1.0, 0.5, 0.2, 0.1))\nconvert(CMYK, RGB24(1.0, 0.5, 0.2))","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"using Colors\n[CMYK(1.0, 0.5, 0.2, 0.1), CMYK(0.1, 1.0, 0.5, 0.2), CMYK(0.2, 0.1, 1.0, 0.5)]","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"On the other hand, in some use cases, conversion methods that are independent of color profiles and devices may be useful. Hence, this package provides the conversion methods defined in CSS Color Module Level 4 (Working Draft) as CMYKColorTypes.naively_convert.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"using CMYKColorTypes: naively_convert;\nseagreen = colorant\"seagreen\"\nnaively_convert(CMYK, seagreen)","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Of course, this methods yields very different results from conversions based on practical color profiles for printed materials.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Lab colors from the Fogra MediaWedge CMYK V3.0","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"permutedims(reshape(first.(Main.FOGRA53_COLORS_SRGB), (24, 3))) # hide","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"naively_convert","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"permutedims(reshape(naively_convert.(RGB, first.(Main.FOGRA53_COLORS)), (24, 3))) # hide","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"default conversion","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"permutedims(reshape(first.(Main.FOGRA53_COLORS), (24, 3))) # hide","category":"page"},{"location":"#Arithmetic","page":"Introduction","title":"Arithmetic","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"If we consider each CMYK component value as an amount of ink, it is physically reasonable to assume the linearity. Therefore, the arithmetic operations of addition, subtraction and real number scaling are implemented. However, there are no definitions for multiplying CMYK colors or for arithmetic between different color spaces.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"CMYK(0.1, 0.2, 0.3, 0.5) + CMYK(0.0, 0.2, 0.125, 0.25)\nCMYK(0.1, 0.2, 0.3, 0.5) - CMYK(0.0, 0.2, 0.125, 0.25)\nCMYK(0.1, 0.2, 0.3, 0.5) * 0.5\nCMYK(0.1, 0.2, 0.3, 0.5) / 2","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Note that if the component type is a FixedPoint type such as N0f8, the operation result will be wrapped around when an overflow occurs.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"using FixedPointNumbers;\nCMYK{N0f8}(0.2, 0.4, 0.6, 0.8) + CMYK{N0f8}(0.4, 0.4, 0.4, 0.4) # overflow in K","category":"page"}]
}
